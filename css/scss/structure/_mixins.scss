//========================================== 
 // Font Face
 //==========================================

@font-face{
	font-family:"Veneer W03 Regular";
	src:url("Fonts/1291430/3d17aa6c-64cc-43c8-a04d-b8d68d6c39c0.eot?#iefix");
	src:url("css/fonts/1291430/3d17aa6c-64cc-43c8-a04d-b8d68d6c39c0.eot?#iefix") format("eot"),url("css/fonts/1291430/c946f057-dba2-44be-85a1-5df0942b74d5.woff2") format("woff2"),url("css/fonts/1291430/f7e83b11-53c3-46f5-aed5-649716547493.woff") format("woff"),url("css/fonts/1291430/7548fe08-d21f-4366-90da-0ffa3bc69e8b.ttf") format("truetype");
}
@font-face{
	font-family:"Nexa Rust Script L W00_00";
	src:url("css/fonts/1425187/c3b8a7f4-85c1-42ff-bf50-1f6c4086ecc0.eot?#iefix");
	src:url("css/fonts/1425187/c3b8a7f4-85c1-42ff-bf50-1f6c4086ecc0.eot?#iefix") format("eot"),url("css/fonts/1425187/8b5fe2c9-b5f1-4047-a276-ab66d4b2a659.woff2") format("woff2"),url("css/fonts/1425187/4556bc2b-c205-44d7-843d-9238cb7e5e61.woff") format("woff"),url("css/fonts/1425187/58471124-a4b0-4287-98ae-24b4ef05e819.ttf") format("truetype");
}


//==========================================
/* Media queries */


@mixin mq($mq) {
	@if $mq == desk {
		@media (min-width: $break-point-desk) { @content; }
	}
	@if $mq == lap {
		@media (min-width: $break-point-lap) { @content; }
	}
	@if $mq == tablet {
		@media (min-width: $break-point-tablet) { @content; }
	}
	@if $mq == mobile {
		@media (min-width: $break-point-mobile) { @content; }
	}
	@if $mq == max-tablet {
		@media (max-width: $break-point-tablet - 1px) { @content; }
	}
}


// @mixin mq($mq) {
//   @if $mq == desk {
//     @media (min-width: $break-point-lap) { @content; }
//   }
//   @if $mq == lap {
//      @media only screen and (min-width: $break-point-tablet)  and (max-width:  $break-point-lap) { @content; }
//   }
//   @if $mq == tablet {
//      @media only screen and (min-width: $break-point-phone)  and (max-width:  $break-point-tablet) { @content; }
//   }
//   @if $mq == phone {
//     @media (max-width: $break-point-phone ) { @content; }
//   }
// }


//=================================
/* Simple grid */
 
@mixin simple-grid($nombre-items , $margin-right ){
		width: ( (100% - ( ($nombre-items - 1) * $margin-right) ) / $nombre-items); 
		margin-right: $margin-right;
		// float:left;
		display: inline-block;
		
		&:nth-child(n) {
			margin-right: $margin-right;
		}
 
		&:nth-child( #{$nombre-items}n) {
			margin-right: 0;
		}
}

//mixing for creating a dot line
@mixin dot-line($width, $top, $left) {
	position: absolute;
	top: $top;
	left: $left;
	width: $width;
	height: 4px;
	background: url(img/bg-line-dot-separator.png) x-repeat;
}

// $Pull-Quotes
// -------------------------------------//
$typl8-pull-quote-fontsize: 1em !default;
$typl8-pull-quote-opacity: 1 !default;
$typl8-pull-quote-color: #dc976e !default;


@mixin typl8-pull-quotes($fontsize, $opacity, $color) {
  position: relative;
  padding: typl8-context-calc($fontsize, $fontsize, em);

  &:before,
  &:after {
	height: typl8-context-calc($fontsize, $fontsize, em);
	opacity: $opacity;
	font-size: $fontsize;
	color: $color;
	line-height: 1;
	width: 20px;
	height: 15px;
	display: inline-block;
	position: relative;
	top: -4px;
  }

  &:before {
    content: '';
    background: url('img/quotation-marks-left.png') no-repeat;
  }

  &:after {
    content: '';
    background: url('img/quotation-marks-right.png') no-repeat;
  }
}


//Set a rem font size with pixel fallback
@function calculateRem($size) {
	$remSize: $size / 18px;
	@return $remSize * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}

// p {
//   @include font-size(14px)
// }
//Set a rem font size with pixel fallback

//SVG background images with PNG and retina fallback
$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
		background-image: url(#{$image-path}/#{$name}.svg);
		@if($size){
				background-size: $size;
		}
		.no-svg &{
				background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

				@media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
					background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
				}
		}
}

// body {
//   @include background-image('pattern');
// }

//SVG background images with PNG and retina fallback

@mixin box-emboss($outerOpacity, $innerOpacity) {
	box-shadow:
		rgba(lighten($verde, 10%), $outerOpacity) 0px 1px 0, 
		rgba(darken($verde, 10%), $innerOpacity) 0 1px 0 inset;
}


/* TEXT SHADOW */
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
		text-shadow: $x $y $blur $color;
}


/* Clearing */
@mixin clearfix() {
		& {
				*zoom: 1;
		}
		&:before,
		&:after {
				content: "";
				display: table;
		}
		&:after {
				clear: both;
		}
}

/* Text offscreen links */
@mixin linkTextOffscreen() {
		text-indent: -9999px;
		overflow: hidden;
		text-decoration: none;
		display: block;
		font-size: 0;
		text-align: start;
}


/* Retina Images */
@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
				 (-o-min-device-pixel-ratio: 2.6/2),
				 (-webkit-min-device-pixel-ratio: 1.3),
				 (min-device-pixel-ratio: 1.3),
				 (min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}

/* Box Sizing */
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}
